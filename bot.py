import asyncio
import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from openai import AsyncOpenAI
from dotenv import load_dotenv
from utils.vpn import add_vpn_user
from utils.qrgen import make_qr

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
GPT_ASSISTANT_ID = os.getenv("GPT_ASSISTANT_ID")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()
client = AsyncOpenAI(api_key=OPENAI_API_KEY)

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
@dp.message(Command("start"))
async def start(msg: types.Message):
    await msg.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî VPN GPT, —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ VPN.\n"
        "–†–∞—Å—Å–∫–∞–∂–∏, –∑–∞—á–µ–º —Ç–µ–±–µ –Ω—É–∂–µ–Ω VPN ‚Äî —è –ø–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç."
    )

# --- –ö–æ–º–∞–Ω–¥–∞ /buy ---
@dp.message(Command("buy"))
async def buy(msg: types.Message):
    await msg.answer("‚è≥ –°–æ–∑–¥–∞—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...")
    link = add_vpn_user()
    qr = make_qr(link)
    await msg.answer("‚úÖ –ì–æ—Ç–æ–≤–æ! –í–æ—Ç —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:")
    await msg.answer(link)
    await msg.answer_photo(qr, caption="üì± –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π QR-–∫–æ–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")

# --- –û–±—â–µ–Ω–∏–µ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º GPT —á–µ—Ä–µ–∑ Assistants API ---
@dp.message()
async def chat_with_assistant(msg: types.Message):
    user_input = msg.text.strip()

    try:
        thread = await client.beta.threads.create_and_run(
            assistant_id=GPT_ASSISTANT_ID,
            thread={"messages": [{"role": "user", "content": user_input}]}
        )

        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        messages = await client.beta.threads.messages.list(thread_id=thread.id)
        if messages.data:
            reply = messages.data[0].content[0].text.value
            await msg.answer(reply)
        else:
            await msg.answer("‚ö†Ô∏è GPT –Ω–µ –ø—Ä–∏—Å–ª–∞–ª –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")

    except Exception as e:
        print("Error communicating with GPT Assistant:", e)
        await msg.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ GPT. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")

# --- –ó–∞–ø—É—Å–∫ ---
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

